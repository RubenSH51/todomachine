{"ast":null,"code":"var _jsxFileName = \"/media/sherlock/B012815A12812686/Sherlock/Platzi/Desarrollo Web/React lab/todomachine 2023/src/App.js\";\nimport './App.css';\nimport { useState } from 'react';\nimport { TodoCounter, TodoItem, TodoList, TodoSearch, CreateTodoButton } from './components';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { TodosLoading } from './components/TodosLoading/TodosLoading';\nimport { TodosError } from './components/TodosError/TodosError';\nimport { TodosEmptyList } from './components/TodosEmptyList/TodosEmptyList';\nimport { TodoContext } from './components/TodoContext/TodoContext';\nimport { TodoProvider } from './components/TodoContext/TodoContext';\n\n// Hook para usar localStorage PARA TODO! No solo TODOS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // Al usar objetos en el return de useLocalStorage.js debo llamar a mis componentes con los mismos nombres\n  // por eso el nombre principal es item y saveItem. Luego con la sintaxis para renombrar estados le pongo\n  // nuevamente los valores todos y saveTodos.\n  // const { item: todos, \n  //         savedItem: saveTodos,\n  //         loading,\n  //         error} = useLocalStorage('TODOS_V1',[])\n\n  // const [searchValue, setSearchValue] = useState('')\n  // const searchedTodos = todos.filter(todo => todo.name.toLowerCase().includes(searchValue.toLowerCase()))\n\n  // const completeTodo = (id) => {\n  //   const newTodos = [...todos];\n  //   const todoIndex = newTodos.findIndex(todo => todo.id === id)\n  //   newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n  //   saveTodos(newTodos)\n  // }\n\n  // const deleteTodo = (id) => {\n  //   const newTodos = todos.filter(todo => todo.id !== id)\n  //   saveTodos(newTodos)\n  // }\n\n  // Moviendo todo\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TodoProvider, {\n      children: [/*#__PURE__*/_jsxDEV(TodoContext.Consumer, {\n        children: (todos, loading) => /*#__PURE__*/_jsxDEV(TodoCounter /*todos={todos} loading={loading}*/, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoSearch\n      // searchValue={searchValue}\n      // setSearchValue={setSearchValue}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoContext.Consumer, {\n        children: _ref => {\n          let {\n            loading,\n            error,\n            searchedTodos,\n            completeTodo,\n            deleteTodo\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TodoList /*todos={todos} loading={loading} error={error}*/, {\n            children: [loading && /*#__PURE__*/_jsxDEV(TodosLoading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), error && /*#__PURE__*/_jsxDEV(TodosError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), !loading && searchedTodos.length === 0 && /*#__PURE__*/_jsxDEV(TodosEmptyList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 54\n            }, this), searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n              name: todo.name,\n              completed: todo.completed,\n              onComplete: () => completeTodo(todo.id) // Completar Todo!\n              ,\n              onDelete: () => deleteTodo(todo.id) // Borrar Todo!\n            }, todo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","TodoCounter","TodoItem","TodoList","TodoSearch","CreateTodoButton","useLocalStorage","TodosLoading","TodosError","TodosEmptyList","TodoContext","TodoProvider","App","todos","loading","error","searchedTodos","completeTodo","deleteTodo","length","map","todo","name","completed","id"],"sources":["/media/sherlock/B012815A12812686/Sherlock/Platzi/Desarrollo Web/React lab/todomachine 2023/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { TodoCounter, TodoItem, TodoList, TodoSearch, CreateTodoButton } from './components';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { TodosLoading } from './components/TodosLoading/TodosLoading';\nimport { TodosError } from './components/TodosError/TodosError';\nimport { TodosEmptyList } from './components/TodosEmptyList/TodosEmptyList';\nimport { TodoContext } from './components/TodoContext/TodoContext';\nimport { TodoProvider } from './components/TodoContext/TodoContext';\n\n\n// Hook para usar localStorage PARA TODO! No solo TODOS\n\n\n\nfunction App() {\n\n  // Al usar objetos en el return de useLocalStorage.js debo llamar a mis componentes con los mismos nombres\n  // por eso el nombre principal es item y saveItem. Luego con la sintaxis para renombrar estados le pongo\n  // nuevamente los valores todos y saveTodos.\n  // const { item: todos, \n  //         savedItem: saveTodos,\n  //         loading,\n  //         error} = useLocalStorage('TODOS_V1',[])\n\n  // const [searchValue, setSearchValue] = useState('')\n  // const searchedTodos = todos.filter(todo => todo.name.toLowerCase().includes(searchValue.toLowerCase()))\n\n  // const completeTodo = (id) => {\n  //   const newTodos = [...todos];\n  //   const todoIndex = newTodos.findIndex(todo => todo.id === id)\n  //   newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n  //   saveTodos(newTodos)\n  // }\n\n  // const deleteTodo = (id) => {\n  //   const newTodos = todos.filter(todo => todo.id !== id)\n  //   saveTodos(newTodos)\n  // }\n\n  // Moviendo todo\n\n  return (\n    \n      <div className=\"App\">\n        <TodoProvider>\n      <TodoContext.Consumer>\n        {(todos, loading) => (\n          <TodoCounter /*todos={todos} loading={loading}*/ /> \n\n\n          \n        )}\n      </ TodoContext.Consumer>\n      <TodoSearch \n            // searchValue={searchValue}\n            // setSearchValue={setSearchValue}\n          />\n      <TodoContext.Consumer>\n        {({\n            loading,\n            error,\n            searchedTodos,\n            completeTodo,\n            deleteTodo\n        }) => (\n          <TodoList /*todos={todos} loading={loading} error={error}*/>\n\n          {loading && <TodosLoading />}\n          {error && <TodosError />}\n          {!loading && searchedTodos.length === 0 && <TodosEmptyList />}\n\n          {searchedTodos.map(todo => (\n            <TodoItem \n              name={todo.name} \n              key={todo.id}\n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.id)} // Completar Todo!\n              onDelete={() => deleteTodo(todo.id)} // Borrar Todo!\n            />\n          ))}\n\n\n        </TodoList>\n        )}\n      </TodoContext.Consumer>\n\n      <CreateTodoButton />\n      </TodoProvider>\n    </div>\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,cAAc;AAC5F,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,YAAY,QAAQ,wCAAwC;AACrE,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,YAAY,QAAQ,sCAAsC;;AAGnE;AAAA;AAIA,SAASC,GAAG,GAAG;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA,oBAEI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,YAAY;MAAA,wBACf,QAAC,WAAW,CAAC,QAAQ;QAAA,UAClB,CAACC,KAAK,EAAEC,OAAO,kBACd,QAAC,WAAW,CAAC;UAAA;UAAA;UAAA;QAAA;MAId;QAAA;QAAA;QAAA;MAAA,QACqB,eACxB,QAAC;MACK;MACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN,QAAC,WAAW,CAAC,QAAQ;QAAA,UAClB;UAAA,IAAC;YACEA,OAAO;YACPC,KAAK;YACLC,aAAa;YACbC,YAAY;YACZC;UACJ,CAAC;UAAA,oBACC,QAAC,QAAQ,CAAC;YAAA,WAETJ,OAAO,iBAAI,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA,QAAG,EAC3BC,KAAK,iBAAI,QAAC,UAAU;cAAA;cAAA;cAAA;YAAA,QAAG,EACvB,CAACD,OAAO,IAAIE,aAAa,CAACG,MAAM,KAAK,CAAC,iBAAI,QAAC,cAAc;cAAA;cAAA;cAAA;YAAA,QAAG,EAE5DH,aAAa,CAACI,GAAG,CAACC,IAAI,iBACrB,QAAC,QAAQ;cACP,IAAI,EAAEA,IAAI,CAACC,IAAK;cAEhB,SAAS,EAAED,IAAI,CAACE,SAAU;cAC1B,UAAU,EAAE,MAAMN,YAAY,CAACI,IAAI,CAACG,EAAE,CAAE,CAAC;cAAA;cACzC,QAAQ,EAAE,MAAMN,UAAU,CAACG,IAAI,CAACG,EAAE,CAAE,CAAC;YAAA,GAHhCH,IAAI,CAACG,EAAE;cAAA;cAAA;cAAA;YAAA,QAKf,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAGO;QAAA;MACV;QAAA;QAAA;QAAA;MAAA,QACoB,eAEvB,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACX;AAIV;AAAC,KA9EQZ,GAAG;AAgFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}